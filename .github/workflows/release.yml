name: Build and Release Powerlang

on:
  push:
    tags:
      - 'v*'

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --name Powerlang --onefile --windowed --add-data "database.py;." --add-data "tts_handler.py;." --add-data "translations.py;." powerlang.py

      - name: Package Windows artifact
        shell: pwsh
        run: Compress-Archive -Path ./dist/Powerlang.exe -DestinationPath ./Powerlang-Windows.zip

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: Powerlang-Windows.zip

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev portaudio19-dev
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build with PyInstaller
        run: pyinstaller --name Powerlang --onefile --windowed --add-data "database.py;." --add-data "tts_handler.py;." --add-data "translations.py;." powerlang.py
        
      - name: Package Linux artifact
        run: |
          tar -czvf Powerlang-Linux.tar.gz -C dist/ Powerlang

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifact
          path: Powerlang-Linux.tar.gz

  release:
    needs: [build_windows, build_linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          name: Powerlang ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            artifacts/windows-artifact/Powerlang-Windows.zip
            artifacts/linux-artifact/Powerlang-Linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}